# yaml-language-server: $schema=https://raw.githubusercontent.com/argoproj/argo-workflows/master/api/jsonschema/schema.json
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: template-martin-app-1
  namespace: argo-workflows
spec:
  imagePullSecrets:
    - name: martin-auth-ghcr
  volumeClaimTemplates:
    - metadata:
        name: app
      spec:
        accessModes: [ ReadWriteOnce ]
        resources:
          requests:
            storage: 256Mi
  templates:
    - name: main
      inputs:
        parameters:
          - { name: branch,       default: master }
          - { name: imageVersion, default: latest }
          - { name: appVersion,   default: latest }
      dag:
        tasks:
          - name: checkout
            template: checkout
            arguments:
              artifacts:
                - name: sourceCode
                  git:
                    repo: https://github.com/martin-deploy/app-1
                    singleBranch: true
                    branch: '{{inputs.parameters.branch}}'
                    revision: '{{inputs.parameters.branch}}'
                    depth: 1
          - name: build
            dependencies: [checkout]
            template: build
          - name: test
            dependencies: [build]
            template: test
          - name: publish
            dependencies: [build]
            template: publish
          - name: containerize
            dependencies: [publish] # Not depending on 'test' here: optimistic containerization
            template: containerize
            arguments:
              parameters:
                - { name: imageVersion, value: '{{inputs.parameters.imageVersion}}' }
                - { name: appVersion,   value: '{{inputs.parameters.appVersion}}' }

    - name: checkout
      inputs:
        artifacts:
          - name: sourceCode
            path: /mnt/wf/inputs/sourceCode
      script:
        image: ghcr.io/martin-deploy/martin-alpine:0.2.0
        command: [ ash ]
        source: |-
          cp -r -f /mnt/wf/inputs/sourceCode/. /mnt/wf/volumes/app
        volumeMounts:
          - mountPath: /mnt/wf/volumes/app
            name: app

    - name: build
      script:
        image: ghcr.io/martin-deploy/martin-alpine-dotnet-sdk:0.2.0
        command: [ ash ]
        source: |-
          dotnet build "/mnt/wf/volumes/app/code" \
            --configuration Release \
            --no-self-contained
        volumeMounts:
          - mountPath: /mnt/wf/volumes/app
            name: app

    - name: test
      outputs:
        artifacts:
          - name: test
            path: /mnt/wf/outputs/test
            archive:
              none: {}
      script:
        image: ghcr.io/martin-deploy/martin-alpine-dotnet-sdk:0.2.0
        command: [ ash ]
        source: |-
          dotnet test "/mnt/wf/volumes/app/code" \
            --no-build \
            --configuration Release \
            --results-directory "/mnt/wf/outputs/test"
        volumeMounts:
          - mountPath: /mnt/wf/volumes/app
            name: app

    - name: publish
      script:
        image: ghcr.io/martin-deploy/martin-alpine-dotnet-sdk:0.2.0
        command: [ ash ]
        source: |-
          dotnet publish "/mnt/wf/volumes/app/code" \
            --no-build \
            --configuration Release \
            --no-self-contained \
            --output "/mnt/wf/volumes/app/publish"
        volumeMounts:
          - mountPath: /mnt/wf/volumes/app
            name: app

    - name: containerize
      inputs:
        parameters:
          - { name: imageVersion, default: latest }
          - { name: appVersion,   default: latest }
      volumes:
        - name: kaniko-config
          secret:
            secretName: martin-auth-ghcr
      container:
        image: gcr.io/kaniko-project/executor:v1.11.0
        args:
          - --destination=ghcr.io/martin-deploy/martin-alpine-app-1:{{inputs.parameters.imageVersion}}
          - --context=/mnt/wf/volumes/app
          - --dockerfile=dockerfile/Dockerfile.martin-alpine-app-1
          - --single-snapshot
          - --build-arg=app_files=publish
          - --label=org.opencontainers.image.version={{inputs.parameters.appVersion}}
          - --label=org.opencontainers.image.source=https://github.com/martin-deploy/app-1
          - --label=org.opencontainers.image.created={{workflow.creationTimestamp.RFC3339}}
        volumeMounts:
          - mountPath: /kaniko/.docker/config.json
            name: kaniko-config
            subPath: .dockerconfigjson
          - mountPath: /mnt/wf/volumes/app
            name: app
